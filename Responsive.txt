<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fully Responsive Center Container</title>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      min-height: 100vh;
      background: linear-gradient(to right, #ece9e6, #ffffff);
      display: flex;
      justify-content: center;
      align-items: center;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .center-wrapper {
      background: #ffffff;
      border-radius: 20px;
      padding: 2.5vw;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
      gap: 2.5vw;
      max-width: 1400px;
      width: 90%;
      transition: all 0.3s ease-in-out;
    }

    .container-title {
      width: 100%;
      text-align: center;
      font-size: 2rem;
      margin-bottom: 20px;
      color: #333;
    }

    .card {
      flex: 1 1 250px;
      max-width: 320px;
      height: 240px;
      background: #f9f9f9;
      border-radius: 15px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
      transition: transform 0.4s ease, background 0.4s ease, box-shadow 0.4s ease;
      cursor: pointer;
      padding: 20px;
      text-align: center;
    }

    .card:hover {
      transform: translateY(-10px) scale(1.03);
      background: linear-gradient(135deg, #00c6ff, #0072ff);
      color: white;
      box-shadow: 0 20px 35px rgba(0, 0, 0, 0.15);
    }

    .card h3 {
      margin-bottom: 10px;
      font-size: 1.4rem;
    }

    .card p {
      font-size: 1rem;
    }

    .card:hover h3,
    .card:hover p {
      color: white;
    }

    /* üì± Small phones */
    @media (max-width: 480px) {
      .center-wrapper {
        padding: 5vw;
        gap: 20px;
      }

      .container-title {
        font-size: 1.6rem;
        margin-bottom: 15px;
      }

      .card {
        width: 100%;
        max-width: 100%;
        height: auto;
        padding: 15px;
      }

      .card h3 {
        font-size: 1.2rem;
      }

      .card p {
        font-size: 0.95rem;
      }
    }

    /* üì± Tablets */
    @media (min-width: 481px) and (max-width: 768px) {
      .card {
        max-width: 90%;
        height: auto;
      }

      .card h3 {
        font-size: 1.3rem;
      }

      .card p {
        font-size: 0.95rem;
      }
    }

    /* üíª Small Laptops */
    @media (min-width: 769px) and (max-width: 1024px) {
      .center-wrapper {
        gap: 30px;
      }

      .card {
        max-width: 45%;
        height: 230px;
      }
    }

    /* üíª Standard Laptops & Desktops */
    @media (min-width: 1025px) and (max-width: 1920px) {
      .card {
        height: 260px;
      }
    }

    /* üñ•Ô∏è 2K & 4K Screens */
    @media (min-width: 1921px) {
      .center-wrapper {
        padding: 3vw;
        max-width: 1800px;
        gap: 3vw;
      }

      .card {
        height: 320px;
        max-width: 400px;
      }

      .card h3 {
        font-size: 2rem;
      }

      .card p {
        font-size: 1.1rem;
      }

      .container-title {
        font-size: 2.5rem;
      }
    }

  </style>
</head>
<body>

  <div class="center-wrapper">
    <h1 class="container-title">Welcome to Our Features</h1>

    <div class="card">
      <h3>Design</h3>
      <p>Modern, scalable and elegant visual components.</p>
    </div>
    <div class="card">
      <h3>Responsive</h3>
      <p>Seamless across all devices: phones, tablets, desktops.</p>
    </div>
    <div class="card">
      <h3>Performance</h3>
      <p>Optimized for speed and smooth user experience.</p>
    </div>
  </div>

</body>
</html>






;:;!!:':!!!!;'"':+!!!!:'"""';!!

#flipbook {
  width: 100%;
  height: auto;
  max-width: 800px;
  margin: 0 auto;
}

.page {
  width: 100%;
  height: 100%;
}


#flipbook {
  aspect-ratio: 2 / 1; /* width:height ratio */
}



function resizeFlipbook() {
  var container = $("#flipbook");
  var width = $(window).width();
  var height = $(window).height();

  // Set a base width and scale it down for smaller screens
  var bookWidth = Math.min(800, width * 0.9);
  var bookHeight = bookWidth / 2; // Maintain 2:1 ratio

  container.turn("size", bookWidth, bookHeight);
}

$(document).ready(function () {
  $("#flipbook").turn({
    width: 800,
    height: 400,
    autoCenter: true,
  });

  resizeFlipbook();

  $(window).on("resize", function () {
    resizeFlipbook();
  });
});



.............................................................



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>PDF Flipbook</title>
  <script src="jquery.js"></script>
  <script src="turn.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>
</head>
<body>

  <div id="flipbook">
    <div class="hard"></div>
    <div class="hard"></div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const pdfUrl = "Movie.pdf";  // Replace with correct path to your PDF
      let totalPages = 0;
      let pagesLoaded = {};

      async function renderPDF() {
        try {
          const loadingTask = pdfjsLib.getDocument(pdfUrl);
          const pdf = await loadingTask.promise;
          totalPages = pdf.numPages;

          const $flipbook = $('#flipbook');

          $(document).ready(function () {
            $flipbook.turn({
              autoCenter: true,
              when: {
                turning: function (event, page, view) {
                  loadPages(page);
                }
              }
            });

            resizeFlipbook();

            $(window).on("resize", function () {
              resizeFlipbook();
            });
          });

          function resizeFlipbook() {
            var container = $("#flipbook");
            var width = $(window).width();
            var height = $(window).height();

            // Set a base width and scale it down for smaller screens
            var bookWidth = Math.min(1400, width * 0.9);
            var bookHeight = bookWidth / 1.80; // Maintain 2:1 ratio

            container.turn("size", bookWidth, bookHeight);
          }

          function loadPage(pageNumber) {
            if (!pagesLoaded[pageNumber]) {
              renderPage(pdf, pageNumber).then($page => {
                $("#flipbook").turn("addPage", $page[0], pageNumber);
                pagesLoaded[pageNumber] = true;
              });
            }
          }

          function loadPages(page) {
            // Lazy load the current page and its neighbors
            if (!pagesLoaded[page]) loadPage(page);
            if (page > 1 && !pagesLoaded[page - 1]) loadPage(page - 1); // load previous
            if (page < totalPages && !pagesLoaded[page + 1]) loadPage(page + 1); // load next
          }

          async function renderPage(pdf, pageNumber) {
            const page = await pdf.getPage(pageNumber);
            const scale = 1.5;
            const viewport = page.getViewport({ scale });

            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');
            canvas.width = viewport.width;
            canvas.height = viewport.height;

            await page.render({ canvasContext: context, viewport }).promise;

            const $pageDiv = $('<div class="page"></div>');
            $pageDiv.append(canvas);
            return $pageDiv;
          }

          // Initially load the first two pages
          loadPages(1);  // Load the first page
          loadPages(2);  // Load the second page as well

        } catch (err) {
          console.error("Error loading PDF: ", err);
          alert("Failed to load PDF. Make sure the URL is correct and accessible.");
        }
      }

      renderPDF();
    });
  </script>

  <style>
    body {
      background: #080143;
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      height: 100%;
      width: 100%;
      overflow-x: hidden;
      overflow-y: hidden;
    }

    #flipbook {
      margin-top: 25px;
    }

    .page {
      background: white;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .page canvas {
      max-width: 100%;
      max-height: 100%;
      width: 100%;
      height: 100%;
    }

    .hard {
      background-color: rgb(89, 90, 91);
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 24px;
      font-weight: bold;
      color: #222;
      text-align: center;
      flex-direction: column;
      pointer-events: none;
      display: none;
    }

    .page-wrapper {
      box-shadow: -5px 3px 30px rgba(8, 1, 71, 0.3);
    }

    @media (max-width: 2560px) {
      #flipbook .page, #flipbook .hard {
        width: 1200px;
        height: 800px;
      }
    }
  </style>

</body>
</html>

